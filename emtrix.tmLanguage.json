{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Emtrix",
	"patterns": [
        {
            "include" : "#decl-block"
        },
        {
            "include": "#comments"
        },
		{
            "include": "#declaration"
        },
        {
            "include": "#printList"
        }
	],
	"repository": {
        "declaration": {
            "name": "declaration.emtrix",
            "begin": "([a-zA-Z][a-zA-Z0-9]*)\\s*(=)\\s*",
            "beginCaptures": {
                "1": {
                    "name": "variable.other.emtrix"
                },
                "2": {
                    "name": "keyword.operator.emtrix"
                }
            },
            "end": ";",
            "endCaptures": {
                "0": {
                    "name": "puncuation.definition.semicolon.emtrix"
                }
            },
            "patterns": [
                {
                    "include": "#expression"
                }
            ]
        },
        "printList": {
            "patterns": [
                {
                    "name": "meta.print.emtrix",
                    "include": "#strings"
                }
            ]
        },
        "expression": {
            "name": "expression.emtrix",
            "patterns": [
                {
                    "include": "#expression-base"
                },
                {
                    
                }
            ]
        },
        "expression-base": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#matrices"
                },
                {
                    "include": "#funcExpression"
                },
                {
                    "include": "#solveExpression"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#numbers"
                },
                {
                    "include": "#operators"
                }
            ]
        },
        "matrices": {
            "patterns": [{
                "name": "meta.matrix.emtrix",
                "begin": "\\[",
                "beginCaptures": {
                    "0": {
                        "name": "punctuation.bracket.open"
                    }
                },
                "end": "\\]",
                "endCaptures": {
                    "0": {
                        "name": "punctuation.bracket.close"
                    }
                },
                "patterns": [{
                    "include": "#matrix-row"
                }]
            }]
        },
        "matrix-row": {
            "patterns": [
                {
                    "name": "meta.matrix.row.emtrix",
                    "patterns": [
                        {
                            "include": "#numbers"
                        },
                        {
                            "name": "punctuation.period.emtrix",
                            "match": "\\."
                        }
                    ]
                }
            ]
        },
        "variables": {
			"patterns": [{
				"name": "variable.other.emtrix",
				"match": "[a-zA-Z][a-zA-Z0-9]*"
			}]
		},
        "funcExpression": {
            "patterns": [
                {
                    "name": "meta.functin.emtrix",
                    "begin": "([a-zA-Z][a-zA-Z0-9]*)(\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "support.function.emtrix"
                        },
                        "2": {
                            "name": "punctuation.paren.open"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.paren.close"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#expression"
                        }
                    ]
                }
            ]
        },
        "solveExpression": {
            "patterns": [
                {
                    "name": "meta.function.solve.emtrix",
                    "begin": "(\\$)(\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "support.function.emtrix"
                        },
                        "2": {
                            "name": "punctuation.paren.open"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.paren.close"
                        }
                    },
                    "patterns": [
                        {
                            "name": "solve.parameter.emtrix",
                            "match": "([a-zA-Z][a-zA-Z0-9]*)\\*(X)\\s*=\\s*([a-zA-Z][a-zA-Z0-9]*)",
                            "captures": {
                                "1": {
                                    "name": "variable.other.emtrix"
                                },
                                "2": {
                                    "name": "variable.other.constant.emtrix"
                                },
                                "3": {
                                    "name": "variable.other.emtrix"
                                }
                            }
                        }
                    ]
                }
            ]
        },
        "comments": {
			"patterns": [
            {
                "name": "comment.block.emtrix",
                "begin": "/\\*",
                "end": "\\*/"
            },{
				"name": "comment.line.emtrix",
				"match": "//.*"
			}]
		},
        "numbers": {
			"patterns": [{
				"name": "constant.numeric.emtrix",
				"match": "-?[0-9]+(\\.[0-9]+)?"
			}]
		},
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.emtrix",
                    "match": "(?:\\*|\\/|\\-|\\+)"
                }
            ]
        },
		"strings": {
			"name": "string.quoted.double.emtrix",
			"begin": "\\>",
            "beginCaptures": {
                "0": {
                    "name": "support.function.emtrix"
                }
            },
            "end": "\\n",
			"patterns": [
                {
                    "include": "#comments"
                },
				{
					"include": "#paren-expression"
				}
			]
		},
        "paren-expression": {
            "begin": "\\{",
            "end": "\\}",
            "beginCaptures": {
              "0": { "name": "punctuation.paren.open" }
            },
            "endCaptures": {
              "0": { "name": "punctuation.paren.close" }
            },
            "name": "meta.embedded.expression.group",
            "patterns": [{ "include": "#expression" }]
        }
	},
	"scopeName": "source.em"
}